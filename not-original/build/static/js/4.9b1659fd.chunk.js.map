{"version":3,"sources":["components/admin/Products/ProductsRow.js","components/admin/Products/ProductsTable.js","components/admin/ClientQueries.js","components/admin/clientMutation.js","components/admin/Products/index.js","components/admin/Products/ProductCreator.js","components/admin/Products/ProductEditor.js","components/admin/Orders/OrderRow.js","components/admin/Orders/OrdersTable.js","components/admin/Orders/index.js","components/auth/AuthWrapper.js","components/auth/AuthPrompt.js","components/admin/index.js"],"names":["ProductsRow","props","product","id","name","category","price","className","toFixed","onClick","deleteProduct","to","ProductsTable","deleteItem","totalSize","PaginationControls","keys","products","map","prod","ordersSummaryQuery","gql","productsList","storeProduct","updateProduct","shipOrder","vars","page","pageSize","sort","Products","compose","graphql","options","variables","data","loading","refetch","currentPage","pageCount","Math","ceil","navigate","Number","setPageSize","size","sortKey","setSortProperty","key","update","cache","queryDetails","query","readQuery","filter","p","writeQuery","mutate","ProductCreator","defaultAttrs","type","required","formModel","label","attrs","mutation","mode","disabled","item","defaultValue","toLowerCase","history","push","saveMutation","client","ValidatedForm","submitCallback","resetStore","cancelCallback","submitText","cancelText","ProductEditor","match","params","OrderRow","order","toggleShipped","email","shipped","reduce","total","quantity","calcTotal","OrdersTable","toggleShip","orders","onlyUnshipped","Orders","AuthWrapper","WrappedComponent","render","AuthContext","Consumer","context","Component","AuthPrompt","withRouter","authenticate","credentials","catch","err","setState","errorMessage","message","then","state","Admin","ToggleLink","isAuthenticated","signout","component","path","ApolloClient","uri","GraphQLUrl","request","gqloperation","setContext","headers","Authorization","webToken"],"mappings":"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","file":"static/js/4.9b1659fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProductsRow = (props) => {\r\n  const { id, name, category, price } = props.product;\r\n\r\n  return (\r\n    <tr>\r\n      <td>{id}</td>\r\n      <td>{name}</td>\r\n      <td>{category}</td>\r\n      <td className=\"text-right\">{price.toFixed(2)}</td>\r\n      <td className=\"text-center\">\r\n        <button\r\n          className=\"btn btn-sm btn-danger mx-1\"\r\n          onClick={() => props.deleteProduct(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n        <Link className=\"btn btn-sm btn-warning\" to={`/admin/products/${id}`}>\r\n          Edit\r\n        </Link>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ProductsRow;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PaginationControls from \"../../pagination/PaginationControls\";\r\nimport ProductsRow from \"./ProductsRow\";\r\n\r\nconst ProductsTable = (props) => {\r\n  const deleteItem = (id) => {\r\n    props.deleteProduct(id);\r\n  };\r\n  return (\r\n    <div>\r\n      <h4 className=\"bg-info text-white text-center p-2\">\r\n        {props.totalSize} Products\r\n      </h4>\r\n      <PaginationControls keys={[\"ID\", \"Name\", \"Category\"]} {...props} />\r\n      <table className=\"table table-sm table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Category</th>\r\n            <th className=\"text-right\">Price</th>\r\n            <th className=\"text-center\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.products.map((prod) => (\r\n            <ProductsRow\r\n              key={prod.id}\r\n              product={prod}\r\n              deleteProduct={deleteItem}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"text-center\">\r\n        <Link className=\"btn btn-primary\" to=\"/admin/products/create\">\r\n          Create Product\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsTable;\r\n","import gql from \"graphql-tag\";\r\n\r\nconst ordersSummaryQuery = gql`\r\n  query($onlyShipped: Boolean, $page: Int, $pageSize: Int, $sort: String) {\r\n    orders(onlyUnshipped: $onlyShipped) {\r\n      totalSize\r\n      orders(page: $page, pageSize: $pageSize, sort: $sort) {\r\n        id\r\n        name\r\n        email\r\n        shipped\r\n        products {\r\n          quantity\r\n          product {\r\n            price\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst productsList = gql`\r\n  query($page: Int, $pageSize: Int, $sort: String) {\r\n    products {\r\n      totalSize\r\n      products(page: $page, pageSize: $pageSize, sort: $sort) {\r\n        id\r\n        name\r\n        category\r\n        price\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst product = gql`\r\n  query($id: ID!) {\r\n    product(id: $id) {\r\n      id\r\n      name\r\n      description\r\n      category\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nexport { ordersSummaryQuery, productsList, product };\r\n","import gql from \"graphql-tag\";\r\n\r\nconst storeProduct = gql`\r\n  mutation($product: productStore) {\r\n    storeProduct(product: $product) {\r\n      id\r\n      name\r\n      category\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\nconst updateProduct = gql`\r\n  mutation($product: productUpdate) {\r\n    updateProduct(product: $product) {\r\n      id\r\n      name\r\n      category\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nconst deleteProduct = gql`\r\n  mutation($id: ID!) {\r\n    deleteProduct(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst shipOrder = gql`\r\n  mutation($id: ID!, $shipped: Boolean!) {\r\n    shipOrder(id: $id, shipped: $shipped) {\r\n      id\r\n      shipped\r\n    }\r\n  }\r\n`;\r\n\r\nexport { storeProduct, updateProduct, deleteProduct, shipOrder };\r\n","import { graphql } from \"react-apollo\";\r\nimport * as compose from \"lodash.flowright\";\r\nimport ProductsTable from \"./ProductsTable\";\r\nimport { productsList } from \"../ClientQueries\";\r\nimport { deleteProduct } from \"../clientMutation\";\r\n\r\nconst vars = {\r\n  page: 1,\r\n  pageSize: 10,\r\n  sort: \"id\",\r\n};\r\n\r\nconst Products = compose(\r\n  graphql(productsList, {\r\n    options: (props) => ({ variables: vars }),\r\n    props: ({ data: { loading, products, refetch } }) => ({\r\n      totalSize: loading ? 0 : products.totalSize,\r\n      products: loading ? [] : products.products,\r\n      currentPage: vars.page,\r\n      pageCount: loading ? 0 : Math.ceil(products.totalSize / vars.pageSize),\r\n      navigate: (page) => {\r\n        vars.page = Number(page);\r\n        refetch(vars);\r\n      },\r\n      pageSize: vars.pageSize,\r\n      setPageSize: (size) => {\r\n        vars.pageSize = Number(size);\r\n        refetch(vars);\r\n      },\r\n      sortKey: vars.sort,\r\n      setSortProperty: (key) => {\r\n        vars.sort = key;\r\n        refetch(vars);\r\n      },\r\n    }),\r\n  }),\r\n  graphql(deleteProduct, {\r\n    options: {\r\n      update: (\r\n        cache,\r\n        {\r\n          data: {\r\n            deleteProduct: { id },\r\n          },\r\n        }\r\n      ) => {\r\n        const queryDetails = { query: productsList, variables: vars };\r\n        const data = cache.readQuery(queryDetails);\r\n        data.products.products = data.products.products.filter(\r\n          (p) => p.id !== id\r\n        );\r\n        data.products.totalSize = data.products.totalSize - 1;\r\n        cache.writeQuery({ ...queryDetails, data });\r\n      },\r\n    },\r\n    props: ({ mutate }) => ({\r\n      deleteProduct: (id) => mutate({ variables: { id } }),\r\n    }),\r\n  })\r\n)(ProductsTable);\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\nimport ValidatedForm from \"../../form/ValidatedForm\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { storeProduct, updateProduct } from \"../clientMutation\";\r\n\r\nconst ProductCreator = (props) => {\r\n  const defaultAttrs = { type: \"text\", required: true };\r\n  let formModel = [\r\n    { label: \"Name\" },\r\n    { label: \"Description\" },\r\n    { label: \"Category\" },\r\n    { label: \"Price\", attrs: { type: \"Number\" } },\r\n  ];\r\n\r\n  let mutation = storeProduct;\r\n\r\n  if (props.mode === \"edit\") {\r\n    mutation = updateProduct;\r\n    formModel = [{ label: \"Id\", attrs: { disabled: true } }, ...formModel].map(\r\n      (item) => ({\r\n        ...item,\r\n        attrs: {\r\n          ...item.attrs,\r\n          defaultValue: props.product[item.label.toLowerCase()],\r\n        },\r\n      })\r\n    );\r\n  }\r\n\r\n  const navigate = () => props.history.push(\"/admin/products\");\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col bg-dark text-white\">\r\n          <div className=\"navbar-brand\">SPORTS STORE</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col m-2\">\r\n          <Mutation mutation={mutation}>\r\n            {(saveMutation, { client }) => (\r\n              <ValidatedForm\r\n                formModel={formModel}\r\n                defaultAttrs={defaultAttrs}\r\n                submitCallback={(data) => {\r\n                  saveMutation({\r\n                    variables: {\r\n                      product: { ...data, price: Number(data.price) },\r\n                    },\r\n                  });\r\n                  if (props.mode !== \"edit\") {\r\n                    client.resetStore();\r\n                  }\r\n                  navigate();\r\n                }}\r\n                cancelCallback={navigate}\r\n                submitText=\"Save\"\r\n                cancelText=\"Cancel\"\r\n              />\r\n            )}\r\n          </Mutation>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCreator;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport ProductCreator from \"./ProductCreator\";\r\nimport { product } from \"../ClientQueries\";\r\n\r\nconst ProductEditor = (props) => {\r\n  return (\r\n    <Query query={product} variables={{ id: props.match.params.id }}>\r\n      {({ loading, data }) => {\r\n        if (!loading) {\r\n          return (\r\n            <ProductCreator {...props} product={data.product} mode=\"edit\" />\r\n          );\r\n        }\r\n        return null;\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nexport default ProductEditor;\r\n","import React from \"react\";\r\n\r\nconst OrderRow = (props) => {\r\n  const { order, toggleShipped } = props;\r\n  const { id, name, email, products, shipped } = order;\r\n\r\n  const calcTotal = (products) =>\r\n    products\r\n      .reduce((total, p) => (total += p.quantity * p.product.price), 0)\r\n      .toFixed(2);\r\n\r\n  const getShipping = ({ shipped }) =>\r\n    shipped ? (\r\n      <i className=\"fa fa-shipping-fast text-success\"></i>\r\n    ) : (\r\n      <i className=\"fa fa-exclamation-circle text-danger\"></i>\r\n    );\r\n\r\n  return (\r\n    <tr>\r\n      <td>{id}</td>\r\n      <td>{name}</td>\r\n      <td>{email}</td>\r\n      <td className=\"text-right\">${calcTotal(products)}</td>\r\n      <td className=\"text-center\">\r\n        <button\r\n          className=\"btn btn-sm btn-block bg-muted\"\r\n          onClick={() => toggleShipped(order)}\r\n        >\r\n          {getShipping(order)}\r\n          <span>{shipped ? \"Shipped\" : \"Pending\"}</span>\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default OrderRow;\r\n","import React from \"react\";\r\nimport OrderRow from \"./OrderRow\";\r\nimport PaginationControls from \"../../pagination/PaginationControls\";\r\n\r\nconst OrdersTable = (props) => {\r\n  const toggleShip = ({ id, shipped }) => {\r\n    props.toggleShipped(id, !shipped);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h4 className=\"bg-info text-white text-center p-2\">\r\n        {props.totalSize} Orders\r\n      </h4>\r\n\r\n      <PaginationControls keys={[\"ID\", \"Name\"]} {...props} />\r\n\r\n      <table className=\"table table-sm table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th className=\"text-right\">Total</th>\r\n            <th className=\"text-center\">Shipped</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.orders.map((order) => (\r\n            <OrderRow key={order.id} order={order} toggleShipped={toggleShip} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersTable;\r\n","import { graphql } from \"react-apollo\";\r\nimport * as compose from \"lodash.flowright\";\r\nimport { ordersSummaryQuery } from \"../ClientQueries\";\r\nimport OrdersTable from \"./OrdersTable\";\r\nimport { shipOrder } from \"../clientMutation\";\r\n\r\nconst vars = {\r\n  onlyUnshipped: false,\r\n  page: 1,\r\n  pageSize: 10,\r\n  sort: \"id\",\r\n};\r\n\r\nconst Orders = compose(\r\n  graphql(ordersSummaryQuery, {\r\n    options: (props) => ({ variables: vars }),\r\n    props: ({ data: { loading, orders, refetch } }) => ({\r\n      totalSize: loading ? 0 : orders.totalSize,\r\n      orders: loading ? [] : orders.orders,\r\n      currentPage: vars.page,\r\n      pageCount: loading ? 0 : Math.ceil(orders.totalSize / vars.pageSize),\r\n      navigate: (page) => {\r\n        vars.page = Number(page);\r\n        refetch(vars);\r\n      },\r\n      pageSize: vars.pageSize,\r\n      setPageSize: (size) => {\r\n        vars.pageSize = Number(size);\r\n        refetch(vars);\r\n      },\r\n      sortKey: vars.sort,\r\n      setSortProperty: (key) => {\r\n        vars.sort = key;\r\n        refetch(vars);\r\n      },\r\n    }),\r\n  }),\r\n  graphql(shipOrder, {\r\n    props: ({ mutate }) => ({\r\n      toggleShipped: (id, shipped) => mutate({ variables: { id, shipped } }),\r\n    }),\r\n  })\r\n)(OrdersTable);\r\n\r\nexport default Orders;\r\n","import React, { Component } from \"react\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nconst AuthWrapper = (WrappedComponent) =>\r\n  class extends Component {\r\n    render = () => (\r\n      <AuthContext.Consumer>\r\n        {(context) => <WrappedComponent {...this.props} {...context} />}\r\n      </AuthContext.Consumer>\r\n    );\r\n  };\r\n\r\nexport default AuthWrapper;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport AuthWrapper from \"./AuthWrapper\";\r\nimport ValidatedForm from \"../form/ValidatedForm\";\r\n\r\nconst AuthPrompt = withRouter(\r\n  AuthWrapper(\r\n    class extends Component {\r\n      constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          errorMessage: null,\r\n        };\r\n        this.defaultAttrs = { required: true };\r\n        this.formModel = [\r\n          { label: \"Username\", attrs: { defaultValue: \"admin\" } },\r\n          { label: \"Password\", attrs: { type: \"password\" } },\r\n        ];\r\n      }\r\n      authenticate = (credentials) => {\r\n        this.props\r\n          .authenticate(credentials)\r\n          .catch((err) => this.setState({ errorMessage: err.message }))\r\n          .then(this.props.history.push(\"/admin\"));\r\n      };\r\n      render = () => (\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col bg-dark text-white\">\r\n              <div className=\"navbar-brand\">SPORTS STORE</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col m-2\">\r\n              {this.state.errorMessage != null && (\r\n                <h4 className=\"bg-danger text-center text-white m-1 p-2\">\r\n                  {this.state.errorMessage}\r\n                </h4>\r\n              )}\r\n              <ValidatedForm\r\n                formModel={this.formModel}\r\n                defaultAttrs={this.defaultAttrs}\r\n                submitCallback={this.authenticate}\r\n                submitText=\"Login\"\r\n                cancelCallback={() => this.props.history.push(\"/\")}\r\n                cancelText=\"Cancel\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  )\r\n);\r\n\r\nexport default AuthPrompt;\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { ToggleLink } from \"../ToggleLink\";\r\nimport Products from \"./Products\";\r\nimport ProductEditor from \"./Products/ProductEditor\";\r\nimport ProductCreator from \"./Products/ProductCreator\";\r\nimport { GraphQLUrl } from \"../../data/constant/Urls\";\r\nimport Orders from \"./Orders\";\r\nimport AuthPrompt from \"../auth/AuthPrompt\";\r\nimport AuthWrapper from \"../auth/AuthWrapper\";\r\n\r\nconst Admin = AuthWrapper(\r\n  class extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.client = new ApolloClient({\r\n        uri: GraphQLUrl,\r\n        request: (gqloperation) =>\r\n          gqloperation.setContext({\r\n            headers: {\r\n              Authorization: `Bearer<${this.props.webToken}>`,\r\n            },\r\n          }),\r\n      });\r\n    }\r\n\r\n    render = () => (\r\n      <ApolloProvider client={this.client}>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col bg-info text-white\">\r\n              <div className=\"navbar-brand\">SPORTS STORE</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-3 p-2\">\r\n              <ToggleLink to=\"/admin/orders\">Orders</ToggleLink>\r\n              <ToggleLink to=\"/admin/products\">Products</ToggleLink>\r\n              {this.props.isAuthenticated && (\r\n                <button\r\n                  onClick={this.props.signout}\r\n                  className=\"btn btn-block btn-secondary m-2 fixed-bottom col-3\"\r\n                >\r\n                  Log Out\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"col-9 p-2\">\r\n              <Switch>\r\n                {!this.props.isAuthenticated && (\r\n                  <Route component={AuthPrompt} />\r\n                )}\r\n                <Route path=\"/admin/orders\" component={Orders} />\r\n                <Route\r\n                  path=\"/admin/products/create\"\r\n                  component={ProductCreator}\r\n                />\r\n                <Route path=\"/admin/products/:id\" component={ProductEditor} />\r\n                <Route path=\"/admin/products\" component={Products} />\r\n                <Redirect to=\"/admin/orders\" />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ApolloProvider>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Admin;\r\n"],"sourceRoot":""}